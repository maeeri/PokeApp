@using System.Security.Claims;
@using System.Security.Principal;
@using PokemonApp.Controllers;
@model ViewModel;
@{ 

    ViewData["Title"] = "MarketPlace";
    Random rnd = new Random();
    var pokemons = CardMethods.GetPokemonCards();
    var random = pokemons.OrderBy(x => rnd.Next()).Take(1);
    PokemonDBContext userDB = new PokemonDBContext();


}
ï»¿

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Pokemon</title>

    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/profiili.css" />
    <script src="~/js/Navbar.js" defer></script>
    <script src="~/js/Profiili.js" defer></script>
</head>

<body>

    <h1>Profile</h1>

    <div class="taistelu">
        <div class="kortti">
            @foreach (var card in random)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in random)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in random)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in random)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in random)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>


        @{
            var getUser = DbController.GetUser(User.Identity.Name);
            //var pokke = keijo.PokemonCards;
            var pokemonIDs = (from x in userDB.PokemonCards where x.User == getUser.Id select x.PokemonId).ToList();
            List<Datum> pokemonList = new List<Datum>();
            foreach (var i in pokemonIDs)
            {
                pokemonList.Add(pokemons.Where(x => x.id == i).FirstOrDefault());
            }

            foreach (var o in pokemonList) //JSON POKEMONKORTIT
            {
                string url = o.images.small;
                <img src=@url class="fill" draggable="true" width="150" height="185" />

            }

        }


    </div>
    <h1>Friends</h1>
    <div>
        <form asp-controller="Home" asp-action="Profile" asp-route-viewModel="@Model">

        <input type="text" name="searchString" asp-route-searchString="searchString" />
        <input type="submit" value="Add friend" />
    </form>


                               



    @if (@Model.Users != null)
    {

        foreach (var item in @Model.Users)
        {
            
            <p>
                @item.Username <a asp-controller="Db" asp-action="FollowFriend" asp-route-userId="@Model.User.Id" asp-route-followId="@item.Id">
                <span title="follow friend">
                    <i class="fa-solid fa-plus" aria-label="follow friend"></i>
                   
                </span>
            </a>
        </p>
   }
}

    <h1>Your friends:</h1>
    @{
        var connections = Model.Connections;
        foreach (var item in connections)
        {

            <p>
               @DbController.GetUserById(item.OtherUser).Username      Cash: @DbController.GetUserById(item.OtherUser).Cash XP: @DbController.GetUserById(item.OtherUser).Xp
                <a class="redtext" asp-controller="Db" asp-action="StopFollowing" asp-route-id="@item.Id">Stop following </a>
            </p>
        }
    }
    @*<button type="button"  onclick="FriendSearch()"> Search for friends</button>
        <table>
            <tr>
                <td>

                        <p id="Friendsearch">
                        </p>

                    </td>
                </tr>
            </table>*@
    </div>


    @*-------------XP bar-------------*@

    @{ 
        var theUser = DbController.GetUser(User.Identity.Name);

        PokemonDBContext uusi = new PokemonDBContext();

        ViewModel tesi = new ViewModel();
        var jotain = tesi.User;

    }

    <div class="progress">
        <div class="progress-done" data-done="50">
            <span class="progress-text"></span>
        </div>
    </div>

    <button class="progress-btn">Press</button>

    <button class="progress-btn2" onclick="ProgressBar2(30)">Press</button>
    <script src="~/js/korttiliike.js"></script>
    <script src="~/js/FriendSearch.js"></script>
</body>
