@using System.Security.Claims;
@using System.Security.Principal;
@using PokemonApp.Controllers;
@model ViewModel;
@{ 

    ViewData["Title"] = "MarketPlace";
    Random rnd = new Random();
    var pokemons = CardMethods.GetPokemonCards();
    var random = pokemons.OrderBy(x => rnd.Next()).Take(1);
    PokemonDBContext userDB = new PokemonDBContext();


}
ï»¿

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Pokemon</title>

    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/profiili.css" />
    <script src="~/js/Navbar.js" defer></script>

    <script src="https://code.jquery.com/jquery-git.js"></script>
</head>

<body>

    <div class="battleCards">
        <div id="selected">
        </div>

        <button onclick="battleComigSoon()"class="Bbutton"><span>START BATTLE!</span></button>
        <script>
            function battleComigSoon() {
                alert("coming soon...");
            }
        </script>
    </div>

    <div class="ownedCards">

        <script>
            function moveButton(elem) {
                if ($(elem).parent().attr("id") == "nonSelected") {
                    $(elem).detach().appendTo('#selected');
                }
                else {
                    $(elem).detach().appendTo('#nonSelected');
                }
            }

        </script>

        <div id="nonSelected">

            @{
                var getUser = DbController.GetUser(User.Identity.Name);
                var pokemonIDs = (from x in userDB.PokemonCards where x.User == getUser.Id select x.PokemonId).ToList();
                List<Datum> pokemonList = new List<Datum>();
                foreach (var i in pokemonIDs)
                {
                    pokemonList.Add(pokemons.Where(x => x.id == i).FirstOrDefault());
                }

                @foreach (var o in pokemonList) //JSON POKEMONKORTIT
                {

                        string url = o.images.small;
                        <img src=@url id="btnDefault" title=@o.name onclick="moveButton(this)" draggable="true" width="160" height="195" />

                }


            }
        </div>
    </div>
    <h1>Friends</h1>
    <div>
        <form asp-controller="Home" asp-action="Profile" asp-route-viewModel="@Model">

        <input type="text" name="searchString" asp-route-searchString="searchString" />
        <input type="submit" value="Add friend" />
    </form>


    <footer class="profileFooter">
        <div class="profile">
            <img src="~/Images/Charmander.png" height="50" class="profilePic" />
            <p>@User.Identity.Name</p>
            <p>Coins: 15</p>
            <p>XP</p>
        </div>


            <p>Search friends</p>
            <form asp-controller="Home" asp-action="Profile" asp-route-viewModel="@Model">

                <input type="text" class="search" name="searchString" asp-route-searchString="searchString" />
                <input type="submit" class="search" value="Search" />
            </form>

            @if (@Model.Users != null)
            {

                foreach (var item in @Model.Users)
                {

                    <p>
                        @item.Username <a asp-controller="Db" asp-action="FollowFriend" asp-route-userId="@Model.User.Id" asp-route-followId="@item.Id">
                            <span title="follow friend">
                                <i class="fa-solid fa-plus" style="color:limegreen;" title="Add friend"></i>

                            </span>
                        </a>
                    </p>
                }
            }

        
        <div class="friend">
            <p>Your friends:</p>
            @{
                var connections = Model.Connections;
                foreach (var item in connections)
                {

                    <p>
                        @DbController.GetUserById(item.OtherUser).Username      Cash: @DbController.GetUserById(item.OtherUser).Cash XP: @DbController.GetUserById(item.OtherUser).Xp
                        <a class="redtext" asp-controller="Db" asp-action="StopFollowing" asp-route-id="@item.Id" title="Stop following"> X </a>
                    </p>
                }
            }
            @*<button type="button"  onclick="FriendSearch()"> Search for friends</button>
            <table>
                <tr>
                    <td>

                        <p id="Friendsearch">
                        </p>

                    </td>
                </tr>
            </table>*@
    </div>


    @*-------------XP bar-------------*@

    @{ 
        var theUser = DbController.GetUser(User.Identity.Name);

        PokemonDBContext uusi = new PokemonDBContext();

        ViewModel tesi = new ViewModel();
        var jotain = tesi.User;

    }

    <div class="progress">
        <div class="progress-done" data-done="0">
            <span class="progress-text"></span>
        </div>
    </div>

    <button class="progress-btn" onclick="ProgressBar(10)">Press</button>

    <button class="progress-btn2" onclick="ProgressBar2(30)">Press</button>
    <script src="~/js/korttiliike.js"></script>
    <script src="~/js/FriendSearch.js"></script>
        </footer></div>
</body>
