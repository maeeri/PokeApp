@using System.Security.Claims;
@using System.Security.Principal;
@using PokemonApp.Controllers;
@{ 

    ViewData["Title"] = "MarketPlace";
    Random rnd = new Random();
    var pokemons = CardMethods.GetPokemonCards();
    var randomi = pokemons.OrderBy(x => rnd.Next()).Take(1);
    PokemonDBContext tyyppi = new PokemonDBContext();



}
ï»¿

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Pokemon</title>

    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/profiili.css" />
    <script src="~/js/Navbar.js" defer></script>
    <script src="~/js/Profiili.js" defer></script>
</head>
<body>
    <h1>Profile</h1>

    <div class="taistelu">
        <div class="kortti">
            @foreach (var card in randomi)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in randomi)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in randomi)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in randomi)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>

        <div class="kortti">
            @foreach (var card in randomi)
            {
                <img src=@card.images.small class="fill" draggable="true" width="150" height="185" />
            }

        </div>
    </div>
    <script src="~/js/korttiliike.js"></script>

    <div class="omistuskortit">

        @{
            var keijo = DbController.GetUser(User.Identity.Name);
            //var pokke = keijo.PokemonCards;
            var simo69 = (from x in tyyppi.PokemonCards where x.User == keijo.Id select x.PokemonId).ToList();
            List<Datum> miika = new List<Datum>();
            foreach (var i in simo69)
            {
                miika.Add(pokemons.Where(x => x.id == i).FirstOrDefault());
            }

            foreach (var o in miika) //JSON POKEMONKORTIT
            {
                string url = o.images.small;
                <img src=@url class="fill" draggable="true" width="150" height="185" />

            }



        }





        }



    </div>
    @{
        var user = DbController.GetUser(User.Identity.Name);

        var userXp = user.Xp;

        PokemonDBContext simppa = new PokemonDBContext();

        //var testiTallennus = userXp + 60;
        simppa.Users.Update(user.Xp + 60);
        
    }

    <div class="progress">
        <div class="progress-done" data-done=@userXp>
            <span class="progress-text"></span>
        </div>
    </div>

    <button class="progress-btn" onclick="ProgressBar(@userXp + 10)">Press</button>
    <button class="progress-btn2" onclick="ProgressBar2(@userXp + 30)">Press</button>


</body>
